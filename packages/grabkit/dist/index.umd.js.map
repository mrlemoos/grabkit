{"version":3,"file":"index.umd.js","sources":["../src/methods.ts","../src/Call.ts","../src/grabkit.ts"],"sourcesContent":["const methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\", \"HEAD\", \"OPTIONS\"];\n\nexport default methods;\n","import type Endpoint from \"./Endpoint\";\nimport type HttpMethod from \"./HttpMethod\";\nimport type UrlShape from \"./UrlShape\";\n\nimport methods from \"./methods\";\n\nclass Call<Data = any, Error = any> {\n  private method: HttpMethod;\n  private url: UrlShape;\n\n  constructor(endpoint: Endpoint, private baseURL?: string) {\n    if (!endpoint) {\n      throw new Error(\n        \"[GrabKit] Where you call? I think you forgot to pass an endpoint \\\\_(-_-)_/.\"\n      );\n    }\n\n    const [sensitiveCaseMethod, sensitiveCaseURI] = String(endpoint)\n      .trim()\n      .split(\" \");\n\n    if (typeof sensitiveCaseMethod !== \"string\") {\n      throw new Error(\n        \"[GrabKit] I think you forgot the method in your endpoint. It should be like `GET /users/` for instance.\"\n      );\n    }\n\n    const method = sensitiveCaseMethod.trim().toUpperCase();\n    let uri = sensitiveCaseURI.trim().toLowerCase();\n\n    if (!uri.startsWith(\"https://\") && !uri.startsWith(\"http://\")) {\n      uri = `${baseURL}${uri}`;\n    }\n\n    this.validateMethod(method);\n    this.validateURI(uri);\n\n    this.debugIfTest();\n  }\n\n  async send<Body = any>({\n    body,\n    headers,\n  }: {\n    body?: Body;\n    // todo: add headers type to autocomplete work like a charm\n    headers?: Headers | { [key: string]: any };\n    // When we see Error type notation here, we are referring to the type of the\n    // error that can be thrown by the fetch API, which is a generic type.\n    // Forget native Error class.\n  }): Promise<[{ data?: Data; error?: Error }, number]> {\n    const response = await fetch(this.url, {\n      method: this.method,\n      body: typeof body === \"object\" ? JSON.stringify(body) : undefined,\n      headers,\n    });\n    const json = await response.json();\n\n    if (response.ok) {\n      return [{ data: json }, response.status];\n    }\n\n    return [{ data: undefined, error: json }, response.status];\n  }\n\n  private debugIfTest(): void {\n    if (process.env.NODE_ENV === \"test\") {\n      console.log(\n        `Call: the method was set to be '${this.method}' at '${this.url}'`\n      );\n    }\n  }\n\n  private validateURI(uri: string): void {\n    if (typeof uri !== \"string\") {\n      throw new Error(\n        \"[GrabKit] Where you call? I think you forgot to pass a URI. \\n\" +\n          `You should give us a URI like this: call()('GET /users') so we can get your data : ) (if it helps, we've got ${uri})`\n      );\n    }\n\n    if (\n      !(\n        uri.startsWith(\"http://\") ||\n        uri.startsWith(\"https://\") ||\n        uri.startsWith(\"/\")\n      )\n    ) {\n      throw new Error(\n        '[GrabKit] I can be wrong, but I think you forgot to add \"http://\" or \"https://\" at the beginning of your URI. \\\\_(-_-)_/ We don\\'t have it automatically because we\\'re not sure which of them you wanna use as prefix. \\n'\n      );\n    }\n\n    if (uri.startsWith(\"/\") && typeof this.baseURL !== \"string\") {\n      throw new Error(\n        \"[GrabKit] You have to give us a baseURL if you want to use a relative URI. Or you meant to use octokit, not sure yet :/\\n\"\n      );\n    }\n  }\n\n  private validateMethod(method: string): void {\n    if (typeof method !== \"string\") {\n      throw new Error(\n        \"[GrabKit] Where you call? I think you forgot to pass a method. \\n\" +\n          `You should give us a method like this: call()('GET /users') so we can get your data :P (if it helps, we've got ${method})`\n      );\n    }\n\n    if (!methods.includes(method)) {\n      throw new Error(\n        `[GrabKit] I can be wrong, but I think there's no HTTP method called '${method}'`\n      );\n    }\n  }\n}\n\nexport default Call;\n","import Call from \"./Call\";\nimport Endpoint from \"./Endpoint\";\n\nfunction grabkit(baseURL?: string) {\n  async function closure<Data = unknown, Error = unknown, Body = unknown>(\n    endpoint: Endpoint,\n    { body, headers }: { body: Body; headers: Headers | { [key: string]: any } }\n  ) {\n    const consumer = new Call<Data, Error>(endpoint, baseURL);\n    const [response, statusCode] = await consumer.send({ body, headers });\n\n    return [response, statusCode];\n  }\n\n  return closure;\n}\n\nexport default grabkit;\n"],"names":["Call","endpoint","baseURL","method","this","url","_String$trim$split","String","trim","split","sensitiveCaseMethod","sensitiveCaseURI","Error","toUpperCase","uri","toLowerCase","startsWith","validateMethod","validateURI","debugIfTest","send","body","headers","Promise","resolve","fetch","JSON","stringify","undefined","response","json","ok","data","status","error","process","env","NODE_ENV","console","log","methods","includes","closure","_ref","consumer","then","_ref2","e","reject"],"mappings":"0NAAA,MAAgB,CAAC,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,WCM5DA,0BAIJ,SAAYC,EAAAA,EAA4BC,GACtC,GADsCA,KAAAA,oBAHhCC,YAGgD,EAAAC,KAFhDC,SAEgC,EAAAD,KAAOF,QAAPA,GACjCD,EACH,MAAM,UACJ,gFAIJ,IAAAK,EAAgDC,OAAON,GACpDO,OACAC,MAAM,KAFFC,EAAPJ,EAAA,GAA4BK,EAI5BL,EAAA,GAAA,GAAmC,iBAA/BI,EACF,MAAUE,IAAAA,MACR,2GAIJ,MAAeF,EAAoBF,OAAOK,cACnCC,EAAGH,EAAiBH,OAAOO,cAE7BD,EAAIE,WAAW,aAAgBF,EAAIE,WAAW,aACjDF,EAASZ,GAAAA,EAAUY,GAGrBV,KAAKa,eAAed,GACpBC,KAAKc,YAAYJ,GAEjBV,KAAKe,yCAGDC,uBACJC,EAAAA,KACAC,IAAAA,YAQD,OAAAC,QAAAC,QACwBC,MAAMrB,KAAKC,IAAK,CACrCF,OAD2BC,KACdD,OACbkB,KAAsB,iBAATA,EAAoBK,KAAKC,UAAUN,QAAQO,EACxDN,QAAAA,mBAHIO,GADP,OAAAN,QAAAC,QAMoBK,EAASC,QAAtBA,KAAAA,SAAAA,GAEFD,OAAAA,EAASE,GACJ,CAAC,CAAEC,KAAMF,GAAQD,EAASI,QAG5B,CAAC,CAAED,UAAMJ,EAAWM,MAAOJ,GAAQD,EAASI,kBAG7Cd,GAAAA,OAAAA,QAAAA,OAAAA,KAAAA,EAAAA,YAAA,WACuB,SAAzBgB,QAAQC,IAAIC,UACdC,QAAQC,IAAR,mCACqCnC,KAAKD,OAD1C,SACyDC,KAAKC,IAD9D,QAMIa,YAAA,SAAYJ,GAClB,GAAmB,mBACjB,UAAMF,MACJ,8KACkHE,EADlH,KAKJ,KAEIA,EAAIE,WAAW,YACfF,EAAIE,WAAW,aACfF,EAAIE,WAAW,MAGjB,MAAM,UACJ,8NAIJ,GAAIF,EAAIE,WAAW,MAAgC,iBAAjBZ,KAAKF,QACrC,UAAMU,MACJ,gIAKEK,eAAA,SAAed,GACrB,GAAsB,iBAAXA,EACT,MAAM,UACJ,mLACoHA,EAFhH,KAMR,IAAKqC,EAAQC,SAAStC,GACpB,MAAUS,IAAAA,8EACgET,EADpE,kBC1GZ,SAAiBD,GAWf,OAVewC,SACbzC,EAF6B0C,GAAA,IAAAtB,EAAAsB,EAG3BtB,KAAMC,EAHqBqB,EAGrBrB,QAAoE,IAE5E,IAAMsB,EAAW,IAAA5C,EAAsBC,EAAUC,GAF2B,OAGvC0C,QAAAA,QAAAA,EAASxB,KAAK,CAAEC,KAAAA,EAAMC,QAAAA,KAHiBuB,KAAA,SAAAC,GAK5E,MAAO,CALqEA,EAAA,GAAAA,EAAA,MAH/C,MAW/BC,GAAA,OAAAxB,QAAAyB,OAAAD"}